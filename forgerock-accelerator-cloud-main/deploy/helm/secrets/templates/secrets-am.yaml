# ========================================================================
# MIDSHIPS
# COPYRIGHT 2023

# Legal Notice:
# Installation and use of this script is subject to a license agreement
# with Midships Limited (a company registered in England, under company
# registration number: 11324587). This script cannot be modified or
# shared with another organisation unless approved in writing by Midships
# Limited. You as a user of this script must review, accept and comply
# with the license terms of each downloaded/installed package that is
# referenced by this script. By proceeding with the installation, you are
# accepting the license terms of each package, and acknowledging that your
# use of each package will be subject to its respective license terms.
# For more information visit www.midships.io

# NOTE:
# Don't check this file into source control with any sensitive hard
# coded values.
# ========================================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .Values.am.secretName . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    deploymentTime: {{ now | date "20060102T150405" | quote }}
type: Opaque
stringData:
  AM_ENCRYPTION_KEY: "{{ tpl .Values.am.secret_am_encryption_key . }}"
  SECRET_ENCKEY_DIRECT: "{{ tpl .Values.am.secret_enckey_direct . }}"
  SECRET_ENCKEY_HMACSIGN: "{{ tpl .Values.am.secret_enckey_hmacsign . }}"
  SECRET_ENCKEY_SELFSERVICESIGN: "{{ tpl .Values.am.secret_enckey_selfservicesign . }}"
  AM_AUTHENTICATION_SHARED_SECRET: "{{ tpl .Values.am.secret_am_authentication_shared_secret . | b64enc }}"
  AM_SESSION_STATELESS_SIGNING_KEY: "{{ tpl .Values.am.secret_am_session_stateless_signing_key . | b64enc }}"
  AM_SESSION_STATELESS_ENCRYPTION_KEY: "{{ tpl .Values.am.secret_am_session_stateless_encryption_key . | b64enc }}"
  AM_OIDC_CLIENT_SUBJECT_IDENTIFIER_HASH_SALT: "{{ tpl .Values.am.secret_am_oidc_client_subject_identifier_hash_salt . }}"
  AM_SELFSERVICE_LEGACY_CONFIRMATION_EMAIL_LINK_SIGNING_KEY: "{{ tpl .Values.am.secret_am_selfservice_legacy_confirmation_email_link_signing_key . | b64enc }}"
  AM_KEYSTORE_DEFAULT_ENTRY_PASSWORD: "{{ tpl .Values.am.secret_am_keystore_default_entry_password . }}"
  AM_KEYSTORE_DEFAULT_PASSWORD: "{{ tpl .Values.am.secret_am_keystore_default_password . }}"
  AM_PASSWORDS_AMADMIN_CLEAR: "{{ tpl .Values.am.secret_am_passwords_amadmin_clear . }}"
  AM_PASSWORDS_TRUSTSTORE: "{{ tpl .Values.am.secret_am_passwords_truststore . }}"
  AM_PROMETHEUS_PASSWORD: "{{ tpl .Values.am.secret_am_prometheus_password . }}"
  {{- if hasPrefix "prod" (lower .Values.global.envType) }}
  SECRET_CERTIFICATE_RSAJWTSIGN: "{{ .Values.am.secret_certificate_rsajwtsign | b64enc }}"
  SECRET_CERTIFICATE_RSAJWTSIGN_KEY: "{{ .Values.am.secret_certificate_rsajwtsignkey | b64enc }}"
  SECRET_CERTIFICATE_SELFSERVICEENC: "{{ .Values.am.secret_certificate_selfServiceenc | b64enc }}"
  SECRET_CERTIFICATE_SELFSERVICEENC_KEY: "{{ .Values.am.secret_certificate_selfServiceenckey | b64enc }}"
  SECRET_CERTIFICATE: "{{ .Values.am.secret_certificate | b64enc }}"
  SECRET_CERTIFICATE_KEY: "{{ .Values.am.secret_certificatekey | b64enc }}"
  {{- else }}    
    {{- $certdetails := dict "commonName" "rsajwtsigningkey" "keyPublicCert" "SECRET_CERTIFICATE_RSAJWTSIGN" "keyPrivateCert" "SECRET_CERTIFICATE_RSAJWTSIGN_KEY" -}}
    {{ ( include "midships.gen-certs-user-keys" $certdetails ) }}
    {{- $certdetails := dict "commonName" "selfserviceenctest" "keyPublicCert" "SECRET_CERTIFICATE_SELFSERVICEENC" "keyPrivateCert" "SECRET_CERTIFICATE_SELFSERVICEENC_KEY" -}}
    {{ ( include "midships.gen-certs-user-keys" $certdetails ) }}
    {{- $certdetails := dict "serviceName" (tpl .Values.am.serviceName .) "release" $.Release "commonName" .Values.am.amSiteFqdn -}}
    {{ ( include "midships.gen-certs" $certdetails ) }}
  {{- end }}