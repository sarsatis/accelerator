suite: access-manager deployment tests
templates:
  - ../templates/deploy.yaml
tests:
  - it: Check deploy.yaml values
    values:
      - ../values.yaml
      - ../../../values.yaml

    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: forgerock-access-manager-dc1
      - matchRegex:
          path: metadata.namespace
          pattern: ^forgerock.*
      - exists:
          path: metadata.labels.app
      - exists:
          path: spec.serviceName
      - exists:
          path: spec.replicas
      - equal:
          path: spec.podManagementPolicy
          value: Parallel
      - exists:
          path: spec.selector.matchLabels.app
      - exists:
          path: spec.template.metadata.labels.app
      - exists:
          path: spec.template.metadata.labels.deploymentTime
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].weight
          value: 1
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].key
          value: app
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.labelSelector.matchExpressions[0].operator
          value: In
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[0].podAffinityTerm.topologyKey
          value: kubernetes.io/hostname
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 10002
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 10002
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 10002
      - equal:
          path: spec.template.spec.hostAliases[0].ip
          value: 127.0.0.1
      - equal:
          path: spec.template.spec.hostAliases[0].hostnames[0]       ##this is an array 
          value: amdc1.midships.io
      - equal:
          path: spec.template.spec.hostAliases[0].hostnames[1]        
          value: am
      - equal:
          path: spec.template.spec.volumes[0].name        
          value: shared
      - equal:
          path: spec.template.spec.containers[0].name        
          value: forgerock-access-manager-dc1
      - equal:
          path: spec.template.spec.containers[0].image        
          value: gcr.io/massive-dynamo-235117/forgerock-access-manager:stable
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy        
          value: Always
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation      
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.privileged      
          value: false
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name   
          value: shared
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath   
          value: /opt/am/config
      - exists:
          path: spec.template.spec.containers[0].resources.requests.cpu   
      - exists:
          path: spec.template.spec.containers[0].resources.requests.memory   
      - exists:
          path: spec.template.spec.containers[0].resources.limits.cpu   
      - exists:
          path: spec.template.spec.containers[0].resources.limits.memory   
      - equal:
          path: spec.template.spec.containers[0].startupProbe.exec.command[0]   ##array  
          value: cat
      - equal:
          path: spec.template.spec.containers[0].startupProbe.exec.command[1]   ##array  
          value: /opt/am/am_setup_done
      - exists:
          path: spec.template.spec.containers[0].startupProbe.initialDelaySeconds  
      - exists:
          path: spec.template.spec.containers[0].startupProbe.failureThreshold  
      - exists:
          path: spec.template.spec.containers[0].startupProbe.periodSeconds  
      - exists:
          path: spec.template.spec.containers[0].startupProbe.timeoutSeconds  
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.scheme
          value: HTTPS
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /am/json/health/live
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 8443
      - exists:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
      - exists:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
      - exists:
          path: spec.template.spec.containers[0].livenessProbe.successThreshold
      - exists:
          path: spec.template.spec.containers[0].livenessProbe.failureThreshold
      - exists:
          path: spec.template.spec.containers[0].livenessProbe.timeoutSeconds
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.scheme
          value: HTTPS
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /am/json/health/live
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 8443
      - exists:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
      - exists:
          path: spec.template.spec.containers[0].readinessProbe.periodSeconds
      - exists:
          path: spec.template.spec.containers[0].readinessProbe.successThreshold
      - exists:
          path: spec.template.spec.containers[0].readinessProbe.failureThreshold
      - exists:
          path: spec.template.spec.containers[0].readinessProbe.timeoutSeconds
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].secretRef.name
          value: forgerock-access-manager-dc1
      - equal:
          path: spec.template.spec.containers[0].envFrom[1].configMapRef.name
          value: forgerock-access-manager-dc1
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: SECRET_CERTIFICATE_US
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
          value: forgerock-user-store-dc1
      - equal:
          path: spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.key
          value: SECRET_CERTIFICATE
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: SECRET_CERTIFICATE_TS
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.name
          value: forgerock-token-store-dc1
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.key
          value: SECRET_CERTIFICATE
      - equal:
          path: spec.template.spec.containers[0].env[2].name
          value: SECRET_CERTIFICATE_APS
      - equal:
          path: spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.name
          value: forgerock-app-policy-store-dc1
      - equal:
          path: spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.key
          value: SECRET_CERTIFICATE
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: http1
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 80
      - equal:
          path: spec.template.spec.containers[0].ports[0].protocol
          value: TCP
      - equal:
          path: spec.template.spec.containers[0].ports[1].name
          value: http2
      - equal:
          path: spec.template.spec.containers[0].ports[1].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[1].protocol
          value: TCP
      - equal:
          path: spec.template.spec.containers[0].ports[2].name
          value: https1
      - equal:
          path: spec.template.spec.containers[0].ports[2].containerPort
          value: 443
      - equal:
          path: spec.template.spec.containers[0].ports[2].protocol
          value: TCP
      - equal:
          path: spec.template.spec.containers[0].ports[3].name
          value: https2
      - equal:
          path: spec.template.spec.containers[0].ports[3].containerPort
          value: 8443
      - equal:
          path: spec.template.spec.containers[0].ports[3].protocol
          value: TCP
      - equal:
          path: spec.template.spec.containers[1].name
          value: midships-fact-dc1
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: fr-nexus-docker
      - hasDocuments:
          count: 1
      - exists:
          path: spec.template

